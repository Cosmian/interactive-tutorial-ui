import { CloseCircleOutlined } from "@ant-design/icons/lib/icons";
import { Button } from "cosmian_ui";
import { useNavigate } from "react-router-dom";
import SyntaxHighlighter from "react-syntax-highlighter";
import { atelierSulphurpoolDark } from "react-syntax-highlighter/dist/esm/styles/hljs";
import { CodeBackground, VmCode } from "../../component/Code";
import Split from "../../component/Split";
import { useBoundStore, useConfidentialVmSore } from "../../store/store";
import { findCurrentNavigationItem, updateNavigationSteps } from "../../utils/navigationActions";

const DetectMalware = (): JSX.Element => {
  const { malware, setMalware } = useConfidentialVmSore((state) => state);
  const { steps, setSteps } = useBoundStore((state) => state);
  const currentItem = findCurrentNavigationItem(steps);
  const navigate = useNavigate();

  const detectMaliciousActivities = (): void => {
    setMalware(true);

    updateNavigationSteps(steps, setSteps);
    navigate("#");
  };

  return (
    <Split>
      <Split.Content>
        <h1>{currentItem?.label}</h1>
        <p>
          Let’s say an attacker writes a malicious script and executes it on the <b>Cosmian VM</b>:
        </p>
        <SyntaxHighlighter
          language={"shell"}
          style={atelierSulphurpoolDark}
          customStyle={{ textAlign: "left", padding: 20, margin: 0 }}
          wrapLongLines={true}
          showLineNumbers={false} // disable line numbers to wrap long lines
          class="code-block"
        >
          {VM_MALWARE}
        </SyntaxHighlighter>

        <Button
          style={{ width: "100%", marginTop: "1em" }}
          onClick={detectMaliciousActivities}
          disabled={malware}
          icon={malware ? <CloseCircleOutlined /> : <></>}
        >
          {malware ? "Integrity check failed" : "Verify the integrity of the VM"}
        </Button>
      </Split.Content>

      <Split.Code>
        <CodeBackground>{malware && <VmCode code={MALWARE_VERIFY} machine="admin" />}</CodeBackground>
      </Split.Code>
    </Split>
  );
};

export default DetectMalware;

const VM_MALWARE = `$sh-5. 1# echo -e #!/usr/bin/bash\n\n echo I am a malware' > script. sh && chmod +× script. sh && ./script. sh
I am a malware
`;

const MALWARE_VERIFY = `$ ./cosmian vm verify --url https: //cosmianvm2.cosmian.dev --snapshot cosm ian vm.snapshot
Fetching the collaterals..
Entry (/home/cosmian/script.sh,7187983243d4c8f1fe178 cadce37bdd2ecfb8bc261dc71586fa83c73c1ba139a) can't be found in the snapshot!
[ FAIL ] Verifying VM integrity
Error: Unexpected binaries found
`;
